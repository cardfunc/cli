version: 2.1
default: &default
  working_directory: ~/repo
  docker:
    - image: circleci/node:10.15
commands:
  prepare:
    description: "Prepare working directory"
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run: npm install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
jobs:
  build:
    <<: *default
    steps:
      - prepare
      - run:
          name: Build
          command: npm run build
      - run:
          name: Run tests
          command: npm run test
  hourly:
    <<: *default
    steps:
      - prepare
      - run:
          name: Build
          command: npm run build
      - run:
          name: Run tests
          command: npm run test
      - run:
          name: Send SMS
          command: |
            curl -X POST https://api.46elks.se/a1/sms \
              -u ${ELKS_API_USER}:${ELKS_API_PASSWORD} \
              -d from=CardFuncCI \
              -d to=${ELKS_TO} \
              -d message="CardFunc CLI hourly test failed."
          when: on_fail
  deploy:
    <<: *default
    steps:
      - prepare
      - run:
          name: Bump version
          command: |
            git config user.email circleci@circleci
            git config user.name CircleCI
            git checkout -- package-lock.json
            npm version patch -m "patch version bump [ci skip]"
            git push
            git push --tags
      - run:
          name: Publish
          command: |
            git status
            echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > .npmrc
            npm publish --access public
workflows:
  version: 2.1
  hourly:
    triggers:
      - schedule:
          cron: "37 * * * *"
          filters:
            branches:
              only: master
    jobs:
      - hourly
  build:
    jobs:
      - build:
          filters:
            branches:
              ignore: master
      - deploy:
          filters:
            branches:
              only: master
